/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ImmichApi.Client.OpenAPIDateConverter;

namespace ImmichApi.Model
{
    /// <summary>
    /// JobStatusDto
    /// </summary>
    [DataContract(Name = "JobStatusDto")]
    public partial class JobStatusDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JobStatusDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected JobStatusDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="JobStatusDto" /> class.
        /// </summary>
        /// <param name="jobCounts">jobCounts (required).</param>
        /// <param name="queueStatus">queueStatus (required).</param>
        public JobStatusDto(JobCountsDto jobCounts = default(JobCountsDto), QueueStatusDto queueStatus = default(QueueStatusDto))
        {
            // to ensure "jobCounts" is required (not null)
            if (jobCounts == null)
            {
                throw new ArgumentNullException("jobCounts is a required property for JobStatusDto and cannot be null");
            }
            this.JobCounts = jobCounts;
            // to ensure "queueStatus" is required (not null)
            if (queueStatus == null)
            {
                throw new ArgumentNullException("queueStatus is a required property for JobStatusDto and cannot be null");
            }
            this.QueueStatus = queueStatus;
        }

        /// <summary>
        /// Gets or Sets JobCounts
        /// </summary>
        [DataMember(Name = "jobCounts", IsRequired = true, EmitDefaultValue = true)]
        public JobCountsDto JobCounts { get; set; }

        /// <summary>
        /// Gets or Sets QueueStatus
        /// </summary>
        [DataMember(Name = "queueStatus", IsRequired = true, EmitDefaultValue = true)]
        public QueueStatusDto QueueStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JobStatusDto {\n");
            sb.Append("  JobCounts: ").Append(JobCounts).Append("\n");
            sb.Append("  QueueStatus: ").Append(QueueStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
