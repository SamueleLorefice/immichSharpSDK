/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ImmichApi.Client.OpenAPIDateConverter;

namespace ImmichApi.Model
{
    /// <summary>
    /// SearchResponseDto
    /// </summary>
    [DataContract(Name = "SearchResponseDto")]
    public partial class SearchResponseDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchResponseDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SearchResponseDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchResponseDto" /> class.
        /// </summary>
        /// <param name="albums">albums (required).</param>
        /// <param name="assets">assets (required).</param>
        public SearchResponseDto(SearchAlbumResponseDto albums = default(SearchAlbumResponseDto), SearchAssetResponseDto assets = default(SearchAssetResponseDto))
        {
            // to ensure "albums" is required (not null)
            if (albums == null)
            {
                throw new ArgumentNullException("albums is a required property for SearchResponseDto and cannot be null");
            }
            this.Albums = albums;
            // to ensure "assets" is required (not null)
            if (assets == null)
            {
                throw new ArgumentNullException("assets is a required property for SearchResponseDto and cannot be null");
            }
            this.Assets = assets;
        }

        /// <summary>
        /// Gets or Sets Albums
        /// </summary>
        [DataMember(Name = "albums", IsRequired = true, EmitDefaultValue = true)]
        public SearchAlbumResponseDto Albums { get; set; }

        /// <summary>
        /// Gets or Sets Assets
        /// </summary>
        [DataMember(Name = "assets", IsRequired = true, EmitDefaultValue = true)]
        public SearchAssetResponseDto Assets { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SearchResponseDto {\n");
            sb.Append("  Albums: ").Append(Albums).Append("\n");
            sb.Append("  Assets: ").Append(Assets).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
