/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ImmichApi.Client.OpenAPIDateConverter;

namespace ImmichApi.Model
{
    /// <summary>
    /// ActivityCreateDto
    /// </summary>
    [DataContract(Name = "ActivityCreateDto")]
    public partial class ActivityCreateDto : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public ReactionType Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivityCreateDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ActivityCreateDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivityCreateDto" /> class.
        /// </summary>
        /// <param name="albumId">albumId (required).</param>
        /// <param name="assetId">assetId.</param>
        /// <param name="comment">comment.</param>
        /// <param name="type">type (required).</param>
        public ActivityCreateDto(Guid albumId = default(Guid), Guid assetId = default(Guid), string comment = default(string), ReactionType type = default(ReactionType))
        {
            this.AlbumId = albumId;
            this.Type = type;
            this.AssetId = assetId;
            this.Comment = comment;
        }

        /// <summary>
        /// Gets or Sets AlbumId
        /// </summary>
        [DataMember(Name = "albumId", IsRequired = true, EmitDefaultValue = true)]
        public Guid AlbumId { get; set; }

        /// <summary>
        /// Gets or Sets AssetId
        /// </summary>
        [DataMember(Name = "assetId", EmitDefaultValue = false)]
        public Guid AssetId { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name = "comment", EmitDefaultValue = false)]
        public string Comment { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ActivityCreateDto {\n");
            sb.Append("  AlbumId: ").Append(AlbumId).Append("\n");
            sb.Append("  AssetId: ").Append(AssetId).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
