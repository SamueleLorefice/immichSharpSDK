/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ImmichApi.Client.OpenAPIDateConverter;

namespace ImmichApi.Model
{
    /// <summary>
    /// DuplicateDetectionConfig
    /// </summary>
    [DataContract(Name = "DuplicateDetectionConfig")]
    public partial class DuplicateDetectionConfig : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DuplicateDetectionConfig" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected DuplicateDetectionConfig() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="DuplicateDetectionConfig" /> class.
        /// </summary>
        /// <param name="enabled">enabled (required).</param>
        /// <param name="maxDistance">maxDistance (required).</param>
        public DuplicateDetectionConfig(bool enabled = default(bool), double maxDistance = default(double))
        {
            this.Enabled = enabled;
            this.MaxDistance = maxDistance;
        }

        /// <summary>
        /// Gets or Sets Enabled
        /// </summary>
        [DataMember(Name = "enabled", IsRequired = true, EmitDefaultValue = true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets or Sets MaxDistance
        /// </summary>
        [DataMember(Name = "maxDistance", IsRequired = true, EmitDefaultValue = true)]
        public double MaxDistance { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DuplicateDetectionConfig {\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  MaxDistance: ").Append(MaxDistance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // MaxDistance (double) maximum
            if (this.MaxDistance > (double)0.1)
            {
                yield return new ValidationResult("Invalid value for MaxDistance, must be a value less than or equal to 0.1.", new [] { "MaxDistance" });
            }

            // MaxDistance (double) minimum
            if (this.MaxDistance < (double)0.001)
            {
                yield return new ValidationResult("Invalid value for MaxDistance, must be a value greater than or equal to 0.001.", new [] { "MaxDistance" });
            }

            yield break;
        }
    }

}
