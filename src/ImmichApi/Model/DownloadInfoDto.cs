/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ImmichApi.Client.OpenAPIDateConverter;

namespace ImmichApi.Model
{
    /// <summary>
    /// DownloadInfoDto
    /// </summary>
    [DataContract(Name = "DownloadInfoDto")]
    public partial class DownloadInfoDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DownloadInfoDto" /> class.
        /// </summary>
        /// <param name="albumId">albumId.</param>
        /// <param name="archiveSize">archiveSize.</param>
        /// <param name="assetIds">assetIds.</param>
        /// <param name="userId">userId.</param>
        public DownloadInfoDto(Guid albumId = default(Guid), int archiveSize = default(int), List<Guid> assetIds = default(List<Guid>), Guid userId = default(Guid))
        {
            this.AlbumId = albumId;
            this.ArchiveSize = archiveSize;
            this.AssetIds = assetIds;
            this.UserId = userId;
        }

        /// <summary>
        /// Gets or Sets AlbumId
        /// </summary>
        [DataMember(Name = "albumId", EmitDefaultValue = false)]
        public Guid AlbumId { get; set; }

        /// <summary>
        /// Gets or Sets ArchiveSize
        /// </summary>
        [DataMember(Name = "archiveSize", EmitDefaultValue = false)]
        public int ArchiveSize { get; set; }

        /// <summary>
        /// Gets or Sets AssetIds
        /// </summary>
        [DataMember(Name = "assetIds", EmitDefaultValue = false)]
        public List<Guid> AssetIds { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name = "userId", EmitDefaultValue = false)]
        public Guid UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DownloadInfoDto {\n");
            sb.Append("  AlbumId: ").Append(AlbumId).Append("\n");
            sb.Append("  ArchiveSize: ").Append(ArchiveSize).Append("\n");
            sb.Append("  AssetIds: ").Append(AssetIds).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ArchiveSize (int) minimum
            if (this.ArchiveSize < (int)1)
            {
                yield return new ValidationResult("Invalid value for ArchiveSize, must be a value greater than or equal to 1.", new [] { "ArchiveSize" });
            }

            yield break;
        }
    }

}
