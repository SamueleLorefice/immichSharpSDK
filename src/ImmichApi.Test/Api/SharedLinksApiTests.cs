/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ImmichApi.Client;
using ImmichApi.Api;
// uncomment below to import models
//using ImmichApi.Model;

namespace ImmichApi.Test.Api
{
    /// <summary>
    ///  Class for testing SharedLinksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SharedLinksApiTests : IDisposable
    {
        private SharedLinksApi instance;

        public SharedLinksApiTests()
        {
            instance = new SharedLinksApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SharedLinksApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SharedLinksApi
            //Assert.IsType<SharedLinksApi>(instance);
        }

        /// <summary>
        /// Test AddSharedLinkAssets
        /// </summary>
        [Fact]
        public void AddSharedLinkAssetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //AssetIdsDto assetIdsDto = null;
            //string? key = null;
            //var response = instance.AddSharedLinkAssets(id, assetIdsDto, key);
            //Assert.IsType<List<AssetIdsResponseDto>>(response);
        }

        /// <summary>
        /// Test CreateSharedLink
        /// </summary>
        [Fact]
        public void CreateSharedLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SharedLinkCreateDto sharedLinkCreateDto = null;
            //var response = instance.CreateSharedLink(sharedLinkCreateDto);
            //Assert.IsType<SharedLinkResponseDto>(response);
        }

        /// <summary>
        /// Test GetAllSharedLinks
        /// </summary>
        [Fact]
        public void GetAllSharedLinksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllSharedLinks();
            //Assert.IsType<List<SharedLinkResponseDto>>(response);
        }

        /// <summary>
        /// Test GetMySharedLink
        /// </summary>
        [Fact]
        public void GetMySharedLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? key = null;
            //string? password = null;
            //string? token = null;
            //var response = instance.GetMySharedLink(key, password, token);
            //Assert.IsType<SharedLinkResponseDto>(response);
        }

        /// <summary>
        /// Test GetSharedLinkById
        /// </summary>
        [Fact]
        public void GetSharedLinkByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetSharedLinkById(id);
            //Assert.IsType<SharedLinkResponseDto>(response);
        }

        /// <summary>
        /// Test RemoveSharedLink
        /// </summary>
        [Fact]
        public void RemoveSharedLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.RemoveSharedLink(id);
        }

        /// <summary>
        /// Test RemoveSharedLinkAssets
        /// </summary>
        [Fact]
        public void RemoveSharedLinkAssetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //AssetIdsDto assetIdsDto = null;
            //string? key = null;
            //var response = instance.RemoveSharedLinkAssets(id, assetIdsDto, key);
            //Assert.IsType<List<AssetIdsResponseDto>>(response);
        }

        /// <summary>
        /// Test UpdateSharedLink
        /// </summary>
        [Fact]
        public void UpdateSharedLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SharedLinkEditDto sharedLinkEditDto = null;
            //var response = instance.UpdateSharedLink(id, sharedLinkEditDto);
            //Assert.IsType<SharedLinkResponseDto>(response);
        }
    }
}
