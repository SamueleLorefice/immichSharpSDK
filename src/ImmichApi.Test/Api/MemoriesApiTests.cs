/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ImmichApi.Client;
using ImmichApi.Api;
// uncomment below to import models
//using ImmichApi.Model;

namespace ImmichApi.Test.Api
{
    /// <summary>
    ///  Class for testing MemoriesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MemoriesApiTests : IDisposable
    {
        private MemoriesApi instance;

        public MemoriesApiTests()
        {
            instance = new MemoriesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MemoriesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MemoriesApi
            //Assert.IsType<MemoriesApi>(instance);
        }

        /// <summary>
        /// Test AddMemoryAssets
        /// </summary>
        [Fact]
        public void AddMemoryAssetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //BulkIdsDto bulkIdsDto = null;
            //var response = instance.AddMemoryAssets(id, bulkIdsDto);
            //Assert.IsType<List<BulkIdResponseDto>>(response);
        }

        /// <summary>
        /// Test CreateMemory
        /// </summary>
        [Fact]
        public void CreateMemoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MemoryCreateDto memoryCreateDto = null;
            //var response = instance.CreateMemory(memoryCreateDto);
            //Assert.IsType<MemoryResponseDto>(response);
        }

        /// <summary>
        /// Test DeleteMemory
        /// </summary>
        [Fact]
        public void DeleteMemoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteMemory(id);
        }

        /// <summary>
        /// Test GetMemory
        /// </summary>
        [Fact]
        public void GetMemoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetMemory(id);
            //Assert.IsType<MemoryResponseDto>(response);
        }

        /// <summary>
        /// Test RemoveMemoryAssets
        /// </summary>
        [Fact]
        public void RemoveMemoryAssetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //BulkIdsDto bulkIdsDto = null;
            //var response = instance.RemoveMemoryAssets(id, bulkIdsDto);
            //Assert.IsType<List<BulkIdResponseDto>>(response);
        }

        /// <summary>
        /// Test SearchMemories
        /// </summary>
        [Fact]
        public void SearchMemoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SearchMemories();
            //Assert.IsType<List<MemoryResponseDto>>(response);
        }

        /// <summary>
        /// Test UpdateMemory
        /// </summary>
        [Fact]
        public void UpdateMemoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //MemoryUpdateDto memoryUpdateDto = null;
            //var response = instance.UpdateMemory(id, memoryUpdateDto);
            //Assert.IsType<MemoryResponseDto>(response);
        }
    }
}
