/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ImmichApi.Client;
using ImmichApi.Api;
// uncomment below to import models
//using ImmichApi.Model;

namespace ImmichApi.Test.Api
{
    /// <summary>
    ///  Class for testing OAuthApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OAuthApiTests : IDisposable
    {
        private OAuthApi instance;

        public OAuthApiTests()
        {
            instance = new OAuthApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OAuthApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OAuthApi
            //Assert.IsType<OAuthApi>(instance);
        }

        /// <summary>
        /// Test FinishOAuth
        /// </summary>
        [Fact]
        public void FinishOAuthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OAuthCallbackDto oAuthCallbackDto = null;
            //var response = instance.FinishOAuth(oAuthCallbackDto);
            //Assert.IsType<LoginResponseDto>(response);
        }

        /// <summary>
        /// Test LinkOAuthAccount
        /// </summary>
        [Fact]
        public void LinkOAuthAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OAuthCallbackDto oAuthCallbackDto = null;
            //var response = instance.LinkOAuthAccount(oAuthCallbackDto);
            //Assert.IsType<UserAdminResponseDto>(response);
        }

        /// <summary>
        /// Test RedirectOAuthToMobile
        /// </summary>
        [Fact]
        public void RedirectOAuthToMobileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.RedirectOAuthToMobile();
        }

        /// <summary>
        /// Test StartOAuth
        /// </summary>
        [Fact]
        public void StartOAuthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OAuthConfigDto oAuthConfigDto = null;
            //var response = instance.StartOAuth(oAuthConfigDto);
            //Assert.IsType<OAuthAuthorizeResponseDto>(response);
        }

        /// <summary>
        /// Test UnlinkOAuthAccount
        /// </summary>
        [Fact]
        public void UnlinkOAuthAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UnlinkOAuthAccount();
            //Assert.IsType<UserAdminResponseDto>(response);
        }
    }
}
