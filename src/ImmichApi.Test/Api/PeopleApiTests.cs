/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ImmichApi.Client;
using ImmichApi.Api;
// uncomment below to import models
//using ImmichApi.Model;

namespace ImmichApi.Test.Api
{
    /// <summary>
    ///  Class for testing PeopleApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PeopleApiTests : IDisposable
    {
        private PeopleApi instance;

        public PeopleApiTests()
        {
            instance = new PeopleApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PeopleApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PeopleApi
            //Assert.IsType<PeopleApi>(instance);
        }

        /// <summary>
        /// Test CreatePerson
        /// </summary>
        [Fact]
        public void CreatePersonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PersonCreateDto personCreateDto = null;
            //var response = instance.CreatePerson(personCreateDto);
            //Assert.IsType<PersonResponseDto>(response);
        }

        /// <summary>
        /// Test GetAllPeople
        /// </summary>
        [Fact]
        public void GetAllPeopleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? page = null;
            //decimal? size = null;
            //bool? withHidden = null;
            //var response = instance.GetAllPeople(page, size, withHidden);
            //Assert.IsType<PeopleResponseDto>(response);
        }

        /// <summary>
        /// Test GetPerson
        /// </summary>
        [Fact]
        public void GetPersonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetPerson(id);
            //Assert.IsType<PersonResponseDto>(response);
        }

        /// <summary>
        /// Test GetPersonAssets
        /// </summary>
        [Fact]
        public void GetPersonAssetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetPersonAssets(id);
            //Assert.IsType<List<AssetResponseDto>>(response);
        }

        /// <summary>
        /// Test GetPersonStatistics
        /// </summary>
        [Fact]
        public void GetPersonStatisticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetPersonStatistics(id);
            //Assert.IsType<PersonStatisticsResponseDto>(response);
        }

        /// <summary>
        /// Test GetPersonThumbnail
        /// </summary>
        [Fact]
        public void GetPersonThumbnailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetPersonThumbnail(id);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test MergePerson
        /// </summary>
        [Fact]
        public void MergePersonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //MergePersonDto mergePersonDto = null;
            //var response = instance.MergePerson(id, mergePersonDto);
            //Assert.IsType<List<BulkIdResponseDto>>(response);
        }

        /// <summary>
        /// Test ReassignFaces
        /// </summary>
        [Fact]
        public void ReassignFacesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //AssetFaceUpdateDto assetFaceUpdateDto = null;
            //var response = instance.ReassignFaces(id, assetFaceUpdateDto);
            //Assert.IsType<List<PersonResponseDto>>(response);
        }

        /// <summary>
        /// Test UpdatePeople
        /// </summary>
        [Fact]
        public void UpdatePeopleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PeopleUpdateDto peopleUpdateDto = null;
            //var response = instance.UpdatePeople(peopleUpdateDto);
            //Assert.IsType<List<BulkIdResponseDto>>(response);
        }

        /// <summary>
        /// Test UpdatePerson
        /// </summary>
        [Fact]
        public void UpdatePersonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //PersonUpdateDto personUpdateDto = null;
            //var response = instance.UpdatePerson(id, personUpdateDto);
            //Assert.IsType<PersonResponseDto>(response);
        }
    }
}
