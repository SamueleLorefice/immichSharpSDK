/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ImmichApi.Client;
using ImmichApi.Api;
// uncomment below to import models
//using ImmichApi.Model;

namespace ImmichApi.Test.Api
{
    /// <summary>
    ///  Class for testing UsersAdminApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UsersAdminApiTests : IDisposable
    {
        private UsersAdminApi instance;

        public UsersAdminApiTests()
        {
            instance = new UsersAdminApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UsersAdminApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UsersAdminApi
            //Assert.IsType<UsersAdminApi>(instance);
        }

        /// <summary>
        /// Test CreateUserAdmin
        /// </summary>
        [Fact]
        public void CreateUserAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserAdminCreateDto userAdminCreateDto = null;
            //var response = instance.CreateUserAdmin(userAdminCreateDto);
            //Assert.IsType<UserAdminResponseDto>(response);
        }

        /// <summary>
        /// Test DeleteUserAdmin
        /// </summary>
        [Fact]
        public void DeleteUserAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //UserAdminDeleteDto userAdminDeleteDto = null;
            //var response = instance.DeleteUserAdmin(id, userAdminDeleteDto);
            //Assert.IsType<UserAdminResponseDto>(response);
        }

        /// <summary>
        /// Test GetUserAdmin
        /// </summary>
        [Fact]
        public void GetUserAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetUserAdmin(id);
            //Assert.IsType<UserAdminResponseDto>(response);
        }

        /// <summary>
        /// Test GetUserPreferencesAdmin
        /// </summary>
        [Fact]
        public void GetUserPreferencesAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetUserPreferencesAdmin(id);
            //Assert.IsType<UserPreferencesResponseDto>(response);
        }

        /// <summary>
        /// Test RestoreUserAdmin
        /// </summary>
        [Fact]
        public void RestoreUserAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.RestoreUserAdmin(id);
            //Assert.IsType<UserAdminResponseDto>(response);
        }

        /// <summary>
        /// Test SearchUsersAdmin
        /// </summary>
        [Fact]
        public void SearchUsersAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? withDeleted = null;
            //var response = instance.SearchUsersAdmin(withDeleted);
            //Assert.IsType<List<UserAdminResponseDto>>(response);
        }

        /// <summary>
        /// Test UpdateUserAdmin
        /// </summary>
        [Fact]
        public void UpdateUserAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //UserAdminUpdateDto userAdminUpdateDto = null;
            //var response = instance.UpdateUserAdmin(id, userAdminUpdateDto);
            //Assert.IsType<UserAdminResponseDto>(response);
        }

        /// <summary>
        /// Test UpdateUserPreferencesAdmin
        /// </summary>
        [Fact]
        public void UpdateUserPreferencesAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //UserPreferencesUpdateDto userPreferencesUpdateDto = null;
            //var response = instance.UpdateUserPreferencesAdmin(id, userPreferencesUpdateDto);
            //Assert.IsType<UserPreferencesResponseDto>(response);
        }
    }
}
