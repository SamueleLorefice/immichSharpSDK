/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ImmichApi.Client;
using ImmichApi.Api;
// uncomment below to import models
//using ImmichApi.Model;

namespace ImmichApi.Test.Api
{
    /// <summary>
    ///  Class for testing AlbumsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AlbumsApiTests : IDisposable
    {
        private AlbumsApi instance;

        public AlbumsApiTests()
        {
            instance = new AlbumsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AlbumsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AlbumsApi
            //Assert.IsType<AlbumsApi>(instance);
        }

        /// <summary>
        /// Test AddAssetsToAlbum
        /// </summary>
        [Fact]
        public void AddAssetsToAlbumTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //BulkIdsDto bulkIdsDto = null;
            //string? key = null;
            //var response = instance.AddAssetsToAlbum(id, bulkIdsDto, key);
            //Assert.IsType<List<BulkIdResponseDto>>(response);
        }

        /// <summary>
        /// Test AddUsersToAlbum
        /// </summary>
        [Fact]
        public void AddUsersToAlbumTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //AddUsersDto addUsersDto = null;
            //var response = instance.AddUsersToAlbum(id, addUsersDto);
            //Assert.IsType<AlbumResponseDto>(response);
        }

        /// <summary>
        /// Test CreateAlbum
        /// </summary>
        [Fact]
        public void CreateAlbumTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAlbumDto createAlbumDto = null;
            //var response = instance.CreateAlbum(createAlbumDto);
            //Assert.IsType<AlbumResponseDto>(response);
        }

        /// <summary>
        /// Test DeleteAlbum
        /// </summary>
        [Fact]
        public void DeleteAlbumTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteAlbum(id);
        }

        /// <summary>
        /// Test GetAlbumCount
        /// </summary>
        [Fact]
        public void GetAlbumCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAlbumCount();
            //Assert.IsType<AlbumCountResponseDto>(response);
        }

        /// <summary>
        /// Test GetAlbumInfo
        /// </summary>
        [Fact]
        public void GetAlbumInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string? key = null;
            //bool? withoutAssets = null;
            //var response = instance.GetAlbumInfo(id, key, withoutAssets);
            //Assert.IsType<AlbumResponseDto>(response);
        }

        /// <summary>
        /// Test GetAllAlbums
        /// </summary>
        [Fact]
        public void GetAllAlbumsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? assetId = null;
            //bool? shared = null;
            //var response = instance.GetAllAlbums(assetId, shared);
            //Assert.IsType<List<AlbumResponseDto>>(response);
        }

        /// <summary>
        /// Test RemoveAssetFromAlbum
        /// </summary>
        [Fact]
        public void RemoveAssetFromAlbumTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //BulkIdsDto bulkIdsDto = null;
            //var response = instance.RemoveAssetFromAlbum(id, bulkIdsDto);
            //Assert.IsType<List<BulkIdResponseDto>>(response);
        }

        /// <summary>
        /// Test RemoveUserFromAlbum
        /// </summary>
        [Fact]
        public void RemoveUserFromAlbumTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string userId = null;
            //instance.RemoveUserFromAlbum(id, userId);
        }

        /// <summary>
        /// Test UpdateAlbumInfo
        /// </summary>
        [Fact]
        public void UpdateAlbumInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //UpdateAlbumDto updateAlbumDto = null;
            //var response = instance.UpdateAlbumInfo(id, updateAlbumDto);
            //Assert.IsType<AlbumResponseDto>(response);
        }

        /// <summary>
        /// Test UpdateAlbumUser
        /// </summary>
        [Fact]
        public void UpdateAlbumUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string userId = null;
            //UpdateAlbumUserDto updateAlbumUserDto = null;
            //instance.UpdateAlbumUser(id, userId, updateAlbumUserDto);
        }
    }
}
