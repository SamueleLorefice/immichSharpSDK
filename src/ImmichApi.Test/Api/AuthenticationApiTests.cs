/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ImmichApi.Client;
using ImmichApi.Api;
// uncomment below to import models
//using ImmichApi.Model;

namespace ImmichApi.Test.Api
{
    /// <summary>
    ///  Class for testing AuthenticationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuthenticationApiTests : IDisposable
    {
        private AuthenticationApi instance;

        public AuthenticationApiTests()
        {
            instance = new AuthenticationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuthenticationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuthenticationApi
            //Assert.IsType<AuthenticationApi>(instance);
        }

        /// <summary>
        /// Test ChangePassword
        /// </summary>
        [Fact]
        public void ChangePasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangePasswordDto changePasswordDto = null;
            //var response = instance.ChangePassword(changePasswordDto);
            //Assert.IsType<UserAdminResponseDto>(response);
        }

        /// <summary>
        /// Test Login
        /// </summary>
        [Fact]
        public void LoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LoginCredentialDto loginCredentialDto = null;
            //var response = instance.Login(loginCredentialDto);
            //Assert.IsType<LoginResponseDto>(response);
        }

        /// <summary>
        /// Test Logout
        /// </summary>
        [Fact]
        public void LogoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Logout();
            //Assert.IsType<LogoutResponseDto>(response);
        }

        /// <summary>
        /// Test SignUpAdmin
        /// </summary>
        [Fact]
        public void SignUpAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SignUpDto signUpDto = null;
            //var response = instance.SignUpAdmin(signUpDto);
            //Assert.IsType<UserAdminResponseDto>(response);
        }

        /// <summary>
        /// Test ValidateAccessToken
        /// </summary>
        [Fact]
        public void ValidateAccessTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ValidateAccessToken();
            //Assert.IsType<ValidateAccessTokenResponseDto>(response);
        }
    }
}
