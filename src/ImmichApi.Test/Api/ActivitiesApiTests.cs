/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.110.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ImmichApi.Client;
using ImmichApi.Api;
// uncomment below to import models
//using ImmichApi.Model;

namespace ImmichApi.Test.Api
{
    /// <summary>
    ///  Class for testing ActivitiesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ActivitiesApiTests : IDisposable
    {
        private ActivitiesApi instance;

        public ActivitiesApiTests()
        {
            instance = new ActivitiesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ActivitiesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ActivitiesApi
            //Assert.IsType<ActivitiesApi>(instance);
        }

        /// <summary>
        /// Test CreateActivity
        /// </summary>
        [Fact]
        public void CreateActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ActivityCreateDto activityCreateDto = null;
            //var response = instance.CreateActivity(activityCreateDto);
            //Assert.IsType<ActivityResponseDto>(response);
        }

        /// <summary>
        /// Test DeleteActivity
        /// </summary>
        [Fact]
        public void DeleteActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteActivity(id);
        }

        /// <summary>
        /// Test GetActivities
        /// </summary>
        [Fact]
        public void GetActivitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid albumId = null;
            //Guid? assetId = null;
            //ReactionLevel? level = null;
            //ReactionType? type = null;
            //Guid? userId = null;
            //var response = instance.GetActivities(albumId, assetId, level, type, userId);
            //Assert.IsType<List<ActivityResponseDto>>(response);
        }

        /// <summary>
        /// Test GetActivityStatistics
        /// </summary>
        [Fact]
        public void GetActivityStatisticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid albumId = null;
            //Guid? assetId = null;
            //var response = instance.GetActivityStatistics(albumId, assetId);
            //Assert.IsType<ActivityStatisticsResponseDto>(response);
        }
    }
}
